{"title":"F1. Guess the K-th Zero (Easy version)","contestId":"1520","problemIndex":"F1","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p><span class=\"tex-font-style-bf\">This is an interactive problem.</span></p><p><span class=\"tex-font-style-bf\">This is an easy version of the problem. The difference from the hard version is that in the easy version $$$t=1$$$ and the number of queries is limited to $$$20$$$.</span></p><p>Polycarp is playing a computer game. In this game, an array consisting of zeros and ones is hidden. Polycarp wins if he guesses the position of the $$$k$$$-th zero from the left $$$t$$$ times.</p><p>Polycarp can make no more than $$$20$$$ requests of the following type: </p><ul> <li> <span class=\"tex-font-style-tt\">?</span> $$$l$$$ $$$r$$$&#xA0;&#x2014; find out the sum of all elements in positions from $$$l$$$ to $$$r$$$ ($$$1 \\le l \\le r \\le n$$$) inclusive. </li></ul><p><span class=\"tex-font-style-it\">In this (easy version) of the problem, this paragraph doesn&apos;t really make sense since $$$t=1$$$ always.</span> To make the game more interesting, each guessed zero turns into one and the game continues on the changed array. More formally, if the position of the $$$k$$$-th zero was $$$x$$$, then after Polycarp guesses this position, the $$$x$$$-th element of the array will be replaced from $$$0$$$ to $$$1$$$. Of course, this feature affects something only for $$$t&gt;1$$$.</p><p>Help Polycarp win the game.</p>","inSpecsHtml":null,"outSpecsHtml":null,"noteHtml":"<div class=\"section-title\">Note</div><p>In the first test, the $$$[1, 0, 1, 1, 0, 1]$$$ array is hidden. In this test $$$k=2$$$.</p>","sampleTestcases":[{"id":1620225863488,"input":"6 1\n2\n\n2\n\n1\n\n1\n\n0\n\n0","output":"? 4 6\n\n? 1 1\n\n? 1 2\n\n? 2 2\n\n? 5 5\n\n! 5"}],"submitUrl":"https://codeforces.com/contest/1520/submit","language":"c++"}